apiVersion: v1
items:
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      haproxy.router.openshift.io/timeout: 4m
      openshift.io/generated-by: OpenShiftNewApp
      template.openshift.io/expose-uri: http://{.spec.host}{.spec.path}
    creationTimestamp: null
    labels:
      app: jenkins-persistent
      template: jenkins-persistent-template
      app.kubernetes.io/part-of: jenkins
    name: jenkins
    namespace: {{ user.username }}-{{ infra_project_name }}
  spec:
    host: ""
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: jenkins
      weight: null
  status:
    ingress: null
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: jenkins-persistent
      template: jenkins-persistent-template
      app.kubernetes.io/part-of: jenkins
    name: jenkins
    namespace: {{ user.username }}-{{ infra_project_name }}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
  status: {}
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      template.alpha.openshift.io/wait-for-ready: "true"
    creationTimestamp: null
    labels:
      app: jenkins-persistent
      template: jenkins-persistent-template
      app.kubernetes.io/part-of: jenkins
    name: jenkins
    namespace: {{ user.username }}-{{ infra_project_name }}
  spec:
    replicas: 1
    selector:
      name: jenkins
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          name: jenkins
          app.kubernetes.io/part-of: jenkins
      spec:
        containers:
        - env:
          - name: OPENSHIFT_ENABLE_OAUTH
            value: "true"
          - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
            value: "true"
          - name: DISABLE_ADMINISTRATIVE_MONITORS
            value: "false"
          - name: KUBERNETES_MASTER
            value: https://kubernetes.default:443
          - name: KUBERNETES_TRUST_CERTIFICATES
            value: "true"
          - name: JENKINS_SERVICE_NAME
            value: jenkins
          - name: JNLP_SERVICE_NAME
            value: jenkins-jnlp
          - name: ENABLE_FATAL_ERROR_LOG_FILE
            value: "false"
          - name: JENKINS_UC_INSECURE
            value: "false"
          - name: CASC_JENKINS_CONFIG
            value: /var/jenkins_home/casc_configs/jenkins.yaml
          - name: INSTALL_PLUGINS
            value: "mailer:1.30,apache-httpcomponents-client-4-api:4.5.10-2.0,jsch:0.1.55.2,git-client:3.2.1,subversion:2.13.1,script-security:1.71,ssh-credentials:1.18.1,credentials:2.3.3,branch-api:2.0.20,cloudbees-folder:6.9,workflow-job:2.29,workflow-cps:2.80,workflow-scm-step:2.10,trilead-api:1.0.5,jira:3.0.13,git:4.2.2,antisamy-markup-formatter:1.6,display-url-api:2.3.2,slack:2.28,ansicolor:0.6.2,token-macro:2.12,linenumbers:1.2,plain-credentials:1.7,greenballs:1.15,jacoco:3.0.5,workflow-step-api:2.22,groovy-postbuild:2.5,badge:1.7,blueocean-rest-impl:1.10.2,credentials-binding:1.19,workflow-multibranch:2.20,pipeline-input-step:2.8,pipeline-stage-step:2.3,pipeline-model-declarative-agent:1.1.1,pipeline-graph-analysis:1.7,pipeline-rest-api:2.10,openshift-sync:1.0.44,openshift-login:1.0.23,openshift-client:1.0.32,configuration-as-code:1.42,gitea:1.2.0"
          image: ' '
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /login
              port: 8080
            initialDelaySeconds: 420
            periodSeconds: 360
            timeoutSeconds: 240
          name: jenkins
          readinessProbe:
            httpGet:
              path: /login
              port: 8080
            initialDelaySeconds: 3
            timeoutSeconds: 240
          resources:
            limits:
              cpu: '2'
              memory: 2Gi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/jenkins
            name: jenkins-data
          - name: jenkins-casc
            mountPath: /var/jenkins_home/casc_configs
          - name: jenkins-create-pipeline
            mountPath: /var/lib/jenkins/init.groovy.d
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        serviceAccountName: jenkins
        volumes:
        - name: jenkins-data
          persistentVolumeClaim:
            claimName: jenkins
        - name: jenkins-casc
          configMap:
            name: jenkins-casc
        - name: jenkins-create-pipeline
          configMap:
            name: jenkins-create-pipeline
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - jenkins
        from:
          kind: ImageStreamTag
          name: jenkins:2
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      serviceaccounts.openshift.io/oauth-redirectreference.jenkins: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"jenkins"}}'
    creationTimestamp: null
    labels:
      app: jenkins-persistent
      template: jenkins-persistent-template
      app.kubernetes.io/part-of: jenkins
    name: jenkins
    namespace: {{ user.username }}-{{ infra_project_name }}
- apiVersion: authorization.openshift.io/v1
  groupNames: null
  kind: RoleBinding
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: jenkins-persistent
      template: jenkins-persistent-template
      app.kubernetes.io/part-of: jenkins
    name: jenkins_edit
    namespace: {{ user.username }}-{{ infra_project_name }}
  roleRef:
    name: edit
  subjects:
  - kind: ServiceAccount
    name: jenkins
  userNames: null
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: jenkins-persistent
      template: jenkins-persistent-template
      app.kubernetes.io/part-of: jenkins
    name: jenkins-jnlp
    namespace: {{ user.username }}-{{ infra_project_name }}
  spec:
    ports:
    - name: agent
      port: 50000
      protocol: TCP
      targetPort: 50000
    selector:
      name: jenkins
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      service.alpha.openshift.io/dependencies: '[{"name": "jenkins-jnlp", "namespace":
        "", "kind": "Service"}]'
      service.openshift.io/infrastructure: "true"
    creationTimestamp: null
    labels:
      app: jenkins-persistent
      template: jenkins-persistent-template
      app.kubernetes.io/part-of: jenkins
    name: jenkins
  spec:
    ports:
    - name: web
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      name: jenkins
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: jenkins-casc
    namespace: {{ user.username }}-{{ infra_project_name }}
  data:
    jenkins.yaml: |-
      unclassified:
        giteaServers:
          servers:
          - displayName: "gitea"
            manageHooks: false
            serverUrl: "https://gitea-server-{{ gitea_project_name }}.apps.{{ full_cluster_name }}"
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: jenkins-create-pipeline
    namespace: {{ user.username }}-{{ infra_project_name }}
  data:
    create-job.groovy: |-
      // inspired by:
      // https://github.com/redfive/jenkins-init/blob/master/init.groovy.d/core-jobs.groovy


      import static jenkins.model.Jenkins.instance as jenkins

      import org.jenkinsci.plugin.gitea.GiteaSCMNavigator
      import org.jenkinsci.plugin.gitea.BranchDiscoveryTrait
      import org.jenkinsci.plugin.gitea.OriginPullRequestDiscoveryTrait
      import org.jenkinsci.plugin.gitea.ForkPullRequestDiscoveryTrait

      import jenkins.branch.NoTriggerOrganizationFolderProperty
      import jenkins.branch.OrganizationFolder
      import jenkins.scm.api.mixin.ChangeRequestCheckoutStrategy

      import org.jenkinsci.plugins.workflow.multibranch.WorkflowMultiBranchProjectFactory

      import com.cloudbees.hudson.plugins.folder.computed.DefaultOrphanedItemStrategy

      jobname = '{{ legacy_jenkins_pipeline_repo }}'
      repoOwner = '{{ user.username }}'
      description = 'pipeline for goodness'
      branchFilter = '.*'
      displayName = '{{ legacy_jenkins_pipeline_repo }}'
      jenkinsfile = 'Jenkinsfile'
      autoBuild = ".*"


      jobs = jenkins.getAllItems()

      def shouldCreate = true

      jobs.each { job ->
        if (job instanceof jenkins.branch.OrganizationFolder && job.fullName.contains(jobname)) {
          println '----> Already have a job for ' + job.fullName + ' of type navigator:' + job.navigators.first().getClass()
          shouldCreate = false
        }
      }

      // If we found the job by name, move along to the next job
      if (shouldCreate) {
        def folder = jenkins.createProject(OrganizationFolder, jobname)

        def navigator = (new GiteaSCMNavigator.DescriptorImpl()).newInstance(repoOwner)
        
        navigator.credentialsId = ''

        folder.navigators.replace(navigator)

        folder.navigators.replace(navigator)

        folder.description = description
        folder.displayName = displayName

        // Delete orphan items after 5 days
        folder.orphanedItemStrategy = new DefaultOrphanedItemStrategy(true, "5", "5")

        // Configure what Jenkinsfile we should be looking for
        WorkflowMultiBranchProjectFactory factory = new WorkflowMultiBranchProjectFactory()
        factory.scriptPath = jenkinsfile
        folder.projectFactories.replace(factory)

        // configure the repos to automatically build
        folder.addProperty(new NoTriggerOrganizationFolderProperty(autoBuild))

        jenkins.save()

        println '----> configured job ' + jobname

        Thread.start {
          sleep 3000 // 3 seconds
          println '----> Running organization scan for job ' + jobname
          folder.scheduleBuild()
        }
      }
kind: List
metadata: {}